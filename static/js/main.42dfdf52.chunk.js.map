{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsterCards","monsters","map","m","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","catch","err","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAgBeA,EAbF,SAAAC,GAEX,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BACGL,EAAMI,QAAQE,OAEjB,4BAAIN,EAAMI,QAAQG,YCITC,G,MAXE,SAAAR,GACfS,QAAQC,IAAI,YAAaV,GACzB,IAAMW,EAAeX,EAAMY,SAASC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAiBV,QAASU,GAAfA,EAAET,OAE1D,OACE,qBAAKJ,UAAU,YAAf,SACGU,MCGQI,G,MAVG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAChC,OACE,uBACEC,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCiCDG,E,kDAnCb,aAAe,IAAD,8BACZ,gBAeFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAftC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IAJH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEV,SAAUmB,OACxCC,OAAM,SAAAC,GAAG,OAAIxB,QAAQC,IAAIuB,Q,oBAO9B,WAAU,IAAD,EAC2BC,KAAKR,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACZY,EAAmBvB,EAASwB,QAAO,SAAAtB,GAAC,OACxCA,EAAER,KAAK+B,cAAcC,SAASf,EAAYc,kBAE5C,OACE,sBAAKpC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWe,YAAY,kBAAkBC,aAAciB,KAAKjB,eAC5D,cAAC,EAAD,CAAUL,SAAUuB,W,GA9BVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.42dfdf52.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nconst Card = props => {\n\n  return (\n    <div className=\"card-container\">\n      <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\n      <h2>\n        {props.monster.name}\n      </h2>\n      <p>{props.monster.email}</p>\n    </div>\n  );\n}\n\nexport default Card;","import React from 'react';\nimport Card from '../card/card.component';\nimport './card-list.styles.css';\n\nconst CardList = props => {\n  console.log('CardList ', props);\n  const monsterCards = props.monsters.map(m => <Card key={m.id} monster={m} />);\n\n  return (\n    <div className='card-list'>\n      {monsterCards}\n    </div>\n  );\n}\n\nexport default CardList;","import React from 'react';\nimport './search.styles.css';\n\nconst SearchBox = ({ placeholder, handleChange }) => {\n  return (\n    <input\n      type=\"search\"\n      placeholder={placeholder}\n      onChange={handleChange}\n    />\n  )\n}\n\nexport default SearchBox;","import React, { Component } from 'react';\nimport './App.css';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n    // this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(users => this.setState({ monsters: users }))\n      .catch(err => console.log(err));\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(m =>\n      m.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    return (\n      <div className='App'>\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder=\"search monsters\" handleChange={this.handleChange} />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}